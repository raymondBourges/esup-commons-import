<?xml version="1.0" encoding="UTF-8" ?>

<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	>

	<!-- 
		/properties/dao/dao.xml
		The configuration file for Data Access Object.
		This file should not be modified but by the developers.
		This file is referenced by /properties/applicationContext.xml.
	-->

	<!-- Database manager store -->

	<bean 
		id="databaseManagerStore" 
		class="org.esupportail.commons.services.database.BasicDatabaseManagerStoreImpl"
		>
		<description>
			This bean is the sore of database managers.
		</description>
		<property name="databaseManagers">
			<list>
				<ref bean="databaseManager" />
			</list>
		</property>
	</bean>

	<!-- Database managers -->

	<bean 
		id="databaseManager" 
		class="org.esupportail.commons.services.database.hibernate.UpgradableHibernateDatabaseManagerImpl"
		>
		<description>
			This bean is the database manager.
		</description>
		<property name="sessionFactoryBeanName" value="sessionFactory" />
		<property name="createSessionFactoryBeanName" value="createSessionFactory" />
		<property name="upgradeSessionFactoryBeanName" value="upgradeSessionFactory" />
	</bean>

	<!-- Session factories -->

	<bean 
		id="abstractHibernateSessionFactory" 
		abstract="true" 
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		>
		<description>
			This bean is common to all the session factories (see below). It allows 
			a single declaration of the mapping files.
		</description>
		<property name="configLocation"
			value="classpath:/properties/dao/hibernate/hibernate.cfg.xml" />
		<property name="mappingLocations">
			<list>
				<value>
					classpath:/properties/dao/hibernate/mapping/DomainClass1.hbm.xml
				</value>
				<value>
					classpath:/properties/dao/hibernate/mapping/DomainClass2.hbm.xml
				</value>
			</list>
		</property>
	</bean>

	
	<bean 
		id="sessionFactory" 
		parent="abstractHibernateSessionFactory" 
		lazy-init="true"
		>
		<description>
			This bean is the 'normal' session factory used by the application.
		</description>
	</bean>

	<bean 
		id="createSessionFactory"
		parent="abstractHibernateSessionFactory"
		lazy-init="true"
		>
		<description>
			This bean is used to create the database structures. 
			Caution: leave inherited attribute lazy-init to true or the database will
			be re-created from scratch each time the application starts.
		</description>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>

	<bean 
		id="upgradeSessionFactory"
		parent="abstractHibernateSessionFactory"
		lazy-init="true"
		>
		<description>
			This bean is used to upgrade the database structure. 
			Caution: leave inherited attribute lazy-init to true or the database will
			be updated each time the application starts.
		</description>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<!-- end of the session factories -->

	<bean 
		id="hibernateSessionFactoryContainer" 
		abstract="true" 
		>
		<description>
			An abstract bean inherited by all the beans that need the session factory
			(the transaction manager and the the DAO service).
		</description>
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean
		id="jdbcExceptionTranslator" 
		class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"
		>
		<description>
			The bean that translates exceptions thrown by JDBC into Spring exceptions.
		</description>
	</bean>

	<bean 
		id="hibernateTemplate"
		parent="hibernateSessionFactoryContainer"
		class="org.springframework.orm.hibernate3.HibernateTemplate"
		>
		<description>
			The Hibernate template, used by the DAO service to access the database.
		</description>
		<property name="jdbcExceptionTranslator" ref="jdbcExceptionTranslator" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean 
		id="daoService" 
		parent="hibernateSessionFactoryContainer"
		class="org.esupportail.application.dao.HibernateDaoService" 
		>
		<description>
			This bean is the DAO service, the interface used by the domain service to access 
			the database. It must implement interface org.esupportail.diskquota.dao.DaoService.
		</description>
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
		
</beans>
